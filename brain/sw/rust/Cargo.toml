[package]
name = "brain"
version = "0.1.0"
authors = ["Kevin King <4kevinking@gmail.com>"]
edition = "2021"
license = "MIT"

[features]
default = [
  "esp32",
  "esp-hal-embassy",
  "esp-hal-smartled",
  "async",
  "embassy-generic-timers",
  "esp-wifi/async",
  "esp-wifi/embassy-net",
  "esp-wifi/wifi-default",
  "esp-wifi/wifi",
  "esp-wifi/utils",
  # "esp-wifi/esp-now",
  # "esp-wifi/wifi-logs",
  "esp-wifi/log",
]
async = ["esp-hal/async"]
embassy-generic-timers = ["embassy-time/generic-queue-8"]
esp32 = [
  "esp-hal/esp32",
  "esp-backtrace/esp32",
  "esp-hal-embassy?/esp32",
  "esp-println/esp32",
  "esp-storage?/esp32",
  "esp-wifi/esp32",
  "esp-hal-smartled/esp32",
]
esp32c2 = [
  "esp-hal/esp32c2",
  "esp-backtrace/esp32c2",
  "esp-hal-embassy?/esp32c2",
  "esp-println/esp32c2",
  "esp-storage?/esp32c2",
  "esp-wifi/esp32c2",
]
esp32c3 = [
  "esp-hal/esp32c3",
  "esp-backtrace/esp32c3",
  "esp-hal-embassy?/esp32c3",
  "esp-println/esp32c3",
  "esp-storage?/esp32c3",
  "esp-wifi/esp32c3",
  "esp-hal-smartled/esp32c3",
]
esp32c6 = [
  "esp-hal/esp32c6",
  "esp-backtrace/esp32c6",
  "esp-hal-embassy?/esp32c6",
  "esp-println/esp32c6",
  "esp-storage?/esp32c6",
  "esp-wifi/esp32c6",
  "esp-hal-smartled/esp32c6",
  "esp-ieee802154/esp32c6",
]
esp32h2 = [
  "esp-hal/esp32h2",
  "esp-backtrace/esp32h2",
  "esp-hal-embassy?/esp32h2",
  "esp-println/esp32h2",
  "esp-storage?/esp32h2",
  "esp-wifi/esp32h2",
  "esp-hal-smartled/esp32h2",
  "esp-ieee802154/esp32h2",
]
esp32s2 = [
  "esp-hal/esp32s2",
  "esp-backtrace/esp32s2",
  "esp-hal-embassy?/esp32s2",
  "esp-println/esp32s2",
  "esp-storage?/esp32s2",
  "esp-wifi/esp32s2",
  "esp-hal-smartled/esp32s2",
]
esp32s3 = [
  "esp-hal/esp32s3",
  "esp-backtrace/esp32s3",
  "esp-hal-embassy?/esp32s3",
  "esp-println/esp32s3",
  "esp-storage?/esp32s3",
  "esp-wifi/esp32s3",
  "esp-hal-smartled/esp32s3",
]

[dependencies]
embassy-sync = { version = "*" }
esp-hal-embassy = { version = "0.3.0", optional = true }
esp-storage = { version = "0.3.0", optional = true }
esp-hal-smartled = { version = "0.13.0", optional = true }
esp-ieee802154 = { version = "0.2.0", optional = true }
embassy-time = { version = "0.3.2", optional = true }
esp-backtrace = { version = "0.14.0", features = [
  "esp32",
  "exception-handler",
  "panic-handler",
  "println",
] }

esp-hal = { version = "0.20.1", features = ["esp32"] }
esp-println = { version = "0.11.0", features = ["esp32", "log"] }
log = { version = "0.4.21" }
esp-alloc = { version = "0.4.0" }
embedded-io = "0.6.1"
esp-wifi = { version = "0.8.0", features = [
  "esp32",
  "phy-enable-usb",
  "utils",
  "wifi",
] }
heapless = { version = "0.8.0", default-features = false }
smoltcp = { version = "0.11.0", default-features = false, features = [
  "async",
  "medium-ethernet",
  "proto-dhcpv4",
  "proto-igmp",
  "proto-ipv4",
  "socket-dhcpv4",
  "socket-icmp",
  "socket-raw",
  "socket-tcp",
  "socket-udp",
] }
embassy-futures = "0.1.1"
embassy-executor = { version = "0.6.0", features = ["task-arena-size-65536"] }
static_cell = { version = "2.1.0", features = ["nightly"] }
smart-leds = "0.4.0"
ws2812-async = "0.2.0"
xtensa-lx-rt = { version = "0.17", features = ["float-save-restore"] }
embassy-net = { version = "0.4.0", features = [
  "dhcpv4",
  "udp",
  "proto-ipv4",
  "proto-ipv6",
  "tcp",
] }
byteorder = { version = "1.5.0", default-features = false }

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.dev.package.esp-wifi]
opt-level = 3

[profile.dev.package.xtensa-lx-rt]
opt-level = 'z'

[profile.release]
codegen-units = 1        # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
